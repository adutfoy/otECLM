import oteclm
import numpy as np
import openturns as ot
import pytest
import numpy.testing as npt
import openturns.testing as ott

def test_class():
    n = 53
    vectImpactTotal = ot.Indices(n+1)
    vectImpactTotal[0] = 2794644
    vectImpactTotal[1] = 2032
    vectImpactTotal[2] = 172
    vectImpactTotal[3] = 33
    vectImpactTotal[4] = 22
    vectImpactTotal[5] = 53
    vectImpactTotal[6] = 22
    vectImpactTotal[7] = 11
    vectImpactTotal[9] = 11
    intAlgo = ot.GaussKronrod()
    myECLM = ECLM(vectImpactTotal, intAlgo)
    x = [5.7e-3, 0.51, 0.85]
    mankamoParam, generalParam, finalLogLikValue, graphesCol = obj.estimateMaxLikelihoodFromMankamo(x)
    ott.assert_almost_equal(mankamoParam, [2.115474126591159e-05, 5.662655017957865e-07, 0.5460764865197583, 0.8490578893757419])
    ott.assert_almost_equal(generalParam, [0.99999837661771373565,0.1802025286216681621,0.38966277951819150438,0.16429542963857571292,0.83570457036142431484])
    # Comparison with Maple computations
    pi_weight, db, dx, dR, y_xm = [0.99999853490212708973,0.18051827615341425881,0.18051827615341423106,0.16414557732694304293,0.83585442267305698483]
    myECLM.setGeneralParameter([pi_weight, db, dx, dR, y_xm])
    PEGref = [9.99151605260000000000e-01, 1.33771875460000000000e-05,
              6.36588603950000000000e-08, 1.11466519150000000000e-09,
              3.71513547130000000000e-11, 1.88832144170000000000e-12,
              1.31490750790000000000e-13, 1.17871148230000000000e-14,
              1.30659271500000000000e-15, 1.74172243760000000000e-16,
              2.73595834260000000000e-17, 4.98760920450000000000e-18,
              1.04278597560000000000e-18, 2.47724434190000000000e-19,
              6.63689316220000000000e-20, 1.99313203960000000000e-20,
              6.67562547200000000000e-21, 2.48307268930000000000e-21,
              1.02199812660000000000e-21, 4.63978181230000000000e-22,
              2.31692088140000000000e-22, 1.26938706800000000000e-22,
              7.61294166450000000000e-23, 4.98752929880000000000e-23,
              3.56271541170000000000e-23, 2.77024759710000000000e-23,
              2.34138264770000000000e-23, 2.14841709650000000000e-23,
              2.13816336670000000000e-23, 2.30640914300000000000e-23,
              2.69538449470000000000e-23, 3.41218979710000000000e-23,
              4.67994950050000000000e-23, 6.95738161270000000000e-23,
              1.12198898810000000000e-22, 1.96498734010000000000e-22,
              3.74291283780000000000e-22, 7.76897919880000000000e-22,
              1.76133889860000000000e-21, 4.37409573570000000000e-21,
              1.19398205210000000000e-20, 3.59725995300000000000e-20,
              1.20219765340000000000e-19, 4.48359209640000000000e-19,
              1.87978509660000000000e-18, 8.94020155130000000000e-18,
              4.87818272920000000000e-17, 3.09833312550000000000e-16,
              2.33472940940000000000e-15, 2.14249433570000000000e-14,
              2.48644704390000000000e-13, 3.87242608800000000000e-12,
              9.00589232660000000000e-11, 4.03106918850000000000e-09]
    PEG = myECLM.computePEGall()
    ott.assert_almost_equal(PEG, PEGref)
